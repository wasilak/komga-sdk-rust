/*
 * Komga API
 *
 * Komga REST API.  ## Reference  Check the API reference: - on the [Komga website](https://komga.org/docs/openapi/komga-api) - on any running Komga instance at `/swagger-ui.html` - on [GitHub](https://raw.githubusercontent.com/gotson/komga/refs/heads/master/komga/docs/openapi.json)  ## Authentication  Most endpoints require authentication. Authentication is done using either: - Basic Authentication - Passing an API Key in the `X-API-Key` header  ## Sessions  Upon successful authentication, a session is created, and can be reused.  - By default, a `KOMGA-SESSION` cookie is set via `Set-Cookie` response header. This works well for browsers and clients that can handle cookies. - If you specify a header `X-Auth-Token` during authentication, the session ID will be returned via this same header. You can then pass that header again for subsequent requests to reuse the session.  If you need to set the session cookie later on, you can call `/api/v1/login/set-cookie` with `X-Auth-Token`. The response will contain the `Set-Cookie` header.  ## Remember Me  During authentication, if a request parameter `remember-me` is passed and set to `true`, the server will also return a `komga-remember-me` cookie. This cookie will be used to login automatically even if the session has expired.  ## Logout  You can explicitly logout an existing session by calling `/api/logout`. This would return a `204`.  ## Deprecation  API endpoints marked as deprecated will be removed in the next major version.
 *
 * The version of the OpenAPI document: 1.23.4
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TachiyomiReadProgressV2Dto {
    #[serde(rename = "booksCount")]
    pub books_count: i32,
    #[serde(rename = "booksInProgressCount")]
    pub books_in_progress_count: i32,
    #[serde(rename = "booksReadCount")]
    pub books_read_count: i32,
    #[serde(rename = "booksUnreadCount")]
    pub books_unread_count: i32,
    #[serde(rename = "lastReadContinuousNumberSort")]
    pub last_read_continuous_number_sort: f32,
    #[serde(rename = "maxNumberSort")]
    pub max_number_sort: f32,
}

impl TachiyomiReadProgressV2Dto {
    pub fn new(books_count: i32, books_in_progress_count: i32, books_read_count: i32, books_unread_count: i32, last_read_continuous_number_sort: f32, max_number_sort: f32) -> TachiyomiReadProgressV2Dto {
        TachiyomiReadProgressV2Dto {
            books_count,
            books_in_progress_count,
            books_read_count,
            books_unread_count,
            last_read_continuous_number_sort,
            max_number_sort,
        }
    }
}

